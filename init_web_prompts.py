# init_web_prompts.py - v1.0.0
"""
Script para inicializar prompts del WebAgent en Minerva.
Ejecuta este script despu√©s de integrar b√∫squeda web.
"""

import sys
from pathlib import Path

# Agregar el directorio ra√≠z al path
ROOT_DIR = Path(__file__).parent
sys.path.insert(0, str(ROOT_DIR))

from src.database.manager import DatabaseManager
from src.database.prompt_manager import PromptManager
from config.settings import settings


def initialize_web_prompts():
    """Crea los prompts por defecto para el WebAgent."""
    
    print("üîß Inicializando PromptManager...")
    db_manager = DatabaseManager(db_path=settings.SQLITE_PATH)
    pm = PromptManager(db_manager=db_manager)
    
    print("\nüìù Creando prompts para WebAgent...\n")
    
    # ========================================================================
    # AGENTE WEB - SYSTEM PROMPT
    # ========================================================================
    
    web_system = """Eres Minerva en modo de b√∫squeda web. Tu trabajo es sintetizar informaci√≥n de internet de forma clara y precisa.

DIRECTRICES IMPORTANTES:
1. **Resume informaci√≥n** de los resultados de b√∫squeda proporcionados
2. **S√© directo y conciso** - responde exactamente lo que se pregunta
3. **NO inventes** informaci√≥n que no est√© en los resultados
4. **Menciona contradicciones** si las hay entre fuentes
5. **NO hagas sugerencias adicionales** a menos que se te pidan expl√≠citamente
6. Si los resultados no son suficientes para responder, dilo claramente

FORMATO DE RESPUESTA:
- Responde directamente la pregunta del usuario
- Usa la informaci√≥n m√°s reciente y relevante
- Estructura con bullets o p√°rrafos seg√∫n sea apropiado
- S√© natural, no uses frases como "seg√∫n los resultados..." innecesariamente

EVITA:
- Sugerencias no solicitadas como "¬øTe gustar√≠a saber m√°s sobre..."
- Repetir la pregunta del usuario
- Agregar informaci√≥n no relevante
- Ser demasiado verboso

Ejemplo BUENO:
Usuario: "¬øCu√°l es la temperatura en Buenos Aires?"
Respuesta: "La temperatura actual en Buenos Aires es de 24¬∞C, con cielo parcialmente nublado."

Ejemplo MALO:
Usuario: "¬øCu√°l es la temperatura en Buenos Aires?"
Respuesta: "Bas√°ndome en los resultados de b√∫squeda, puedo decirte que la temperatura en Buenos Aires es de 24¬∞C. ¬øTe gustar√≠a saber el pron√≥stico para los pr√≥ximos d√≠as?"
"""
    
    pm.create_prompt_version(
        agent_type="web",
        prompt_name="system_prompt",
        content=web_system,
        description="Prompt del sistema para WebAgent - versi√≥n inicial",
        created_by="init_script",
        auto_activate=True
    )
    print("‚úÖ Prompt web.system_prompt creado")
    
    # ========================================================================
    # AGENTE WEB - SYNTHESIS PROMPT
    # ========================================================================
    
    web_synthesis = """Sintetiza la siguiente informaci√≥n de b√∫squeda web para responder la pregunta del usuario.

RESULTADOS DE B√öSQUEDA:
{search_results}

PREGUNTA DEL USUARIO:
{user_question}

INSTRUCCIONES:
- Usa solo la informaci√≥n de los resultados
- S√© directo y espec√≠fico
- No repitas informaci√≥n
- No agregues sugerencias
- Si hay informaci√≥n contradictoria, mencionalo brevemente

RESPUESTA:"""
    
    pm.create_prompt_version(
        agent_type="web",
        prompt_name="synthesis_prompt",
        content=web_synthesis,
        description="Template para sintetizar resultados de b√∫squeda",
        created_by="init_script",
        auto_activate=True
    )
    print("‚úÖ Prompt web.synthesis_prompt creado")
    
    # ========================================================================
    # ROUTER - ACTUALIZADO PARA INCLUIR WEB
    # ========================================================================
    
    router_prompt_updated = """Analiza la siguiente pregunta del usuario y determina qu√© agente debe responderla.

PREGUNTA: {question}

¬øHay documentos disponibles?: {has_documents}

AGENTES DISPONIBLES:
1. WEB - Para informaci√≥n actualizada, noticias, clima, eventos recientes, precios actuales
2. KNOWLEDGE - Para preguntas sobre documentos indexados
3. CONVERSATIONAL - Para chat general, preguntas personales, opiniones

CRITERIOS DE DECISI√ìN:

‚Üí WEB si:
  - Pregunta sobre informaci√≥n actualizada (hoy, ahora, actual, reciente)
  - Consulta sobre noticias, clima, eventos deportivos
  - Precios actuales, cotizaciones, bolsa
  - Menciona fechas recientes o "√∫ltimas"
  - Pregunta que requiere datos actualizados de internet

‚Üí KNOWLEDGE si:
  - Pregunta espec√≠fica sobre documentos ("¬øqu√© dice el documento sobre...")
  - Consulta sobre contenido indexado
  - Hay documentos disponibles Y la pregunta es relevante a ellos

‚Üí CONVERSATIONAL si:
  - Chat casual, saludos, despedidas
  - Preguntas generales que no requieren info actualizada
  - Opiniones, consejos, explicaciones generales
  - Preguntas personales sobre preferencias

RESPONDE:
AGENT: [web/knowledge/conversational]
CONFIDENCE: [high/medium/low]
REASON: [breve explicaci√≥n]"""
    
    pm.create_prompt_version(
        agent_type="router",
        prompt_name="routing_prompt",
        content=router_prompt_updated,
        description="Prompt actualizado con soporte para WebAgent",
        created_by="init_script",
        auto_activate=True
    )
    print("‚úÖ Prompt router.routing_prompt actualizado")
    
    # ========================================================================
    # RESUMEN
    # ========================================================================
    
    print("\n" + "="*60)
    print("‚úÖ Inicializaci√≥n completa")
    print("="*60)
    print("\nPrompts creados/actualizados:")
    print("  ‚Ä¢ web.system_prompt")
    print("  ‚Ä¢ web.synthesis_prompt")
    print("  ‚Ä¢ router.routing_prompt (actualizado)")
    print("\nPuedes editarlos desde la UI de administraci√≥n en:")
    print("  http://localhost:7860 ‚Üí Pesta√±a 'Administraci√≥n'")
    print("\nEl WebAgent ya est√° listo para usar.")
    print("="*60 + "\n")


if __name__ == "__main__":
    try:
        print("üöÄ Inicializando prompts de WebAgent...\n")
        initialize_web_prompts()
        print("üéâ ¬°Listo! Minerva ahora puede buscar en internet.\n")
    except Exception as e:
        print(f"\n‚ùå Error: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)